(define-fun f ((x Int)) Int x)
(define-fun f ((x Int)) Int 3)
(define-fun f ((x Int)) Int 7)
(define-fun f ((x Int)) Int 10)
(define-fun f ((x Int)) Int (* x x))
(define-fun f ((x Int)) Int (* x 3))
(define-fun f ((x Int)) Int (* x 7))
(define-fun f ((x Int)) Int (* x 10))
(define-fun f ((x Int)) Int (* 3 3))
(define-fun f ((x Int)) Int (* 3 7))
(define-fun f ((x Int)) Int (* 3 10))
(define-fun f ((x Int)) Int (* 7 7))
(define-fun f ((x Int)) Int (* 7 10))
(define-fun f ((x Int)) Int (* 10 10))
(define-fun f ((x Int)) Int (mod x x))
(define-fun f ((x Int)) Int (mod x 3))
(define-fun f ((x Int)) Int (mod x 7))
(define-fun f ((x Int)) Int (mod x 10))
(define-fun f ((x Int)) Int (mod 3 x))
(define-fun f ((x Int)) Int (mod 3 3))
(define-fun f ((x Int)) Int (mod 3 7))
(define-fun f ((x Int)) Int (mod 3 10))
(define-fun f ((x Int)) Int (mod 7 x))
(define-fun f ((x Int)) Int (mod 7 3))
(define-fun f ((x Int)) Int (mod 7 7))
(define-fun f ((x Int)) Int (mod 7 10))
(define-fun f ((x Int)) Int (mod 10 x))
(define-fun f ((x Int)) Int (mod 10 3))
(define-fun f ((x Int)) Int (mod 10 7))
(define-fun f ((x Int)) Int (mod 10 10))
(define-fun f ((x Int)) Int (* x (* x x)))
(define-fun f ((x Int)) Int (* x (* x 3)))
(define-fun f ((x Int)) Int (* x (* x 7)))
(define-fun f ((x Int)) Int (* x (* x 10)))
(define-fun f ((x Int)) Int (* x (* 3 x)))
(define-fun f ((x Int)) Int (* x (* 3 3)))
(define-fun f ((x Int)) Int (* x (* 3 7)))
(define-fun f ((x Int)) Int (* x (* 3 10)))
(define-fun f ((x Int)) Int (* x (* 7 x)))
(define-fun f ((x Int)) Int (* x (* 7 3)))
(define-fun f ((x Int)) Int (* x (* 7 7)))
(define-fun f ((x Int)) Int (* x (* 7 10)))
(define-fun f ((x Int)) Int (* x (* 10 x)))
(define-fun f ((x Int)) Int (* x (* 10 3)))
(define-fun f ((x Int)) Int (* x (* 10 7)))
(define-fun f ((x Int)) Int (* x (* 10 10)))
(define-fun f ((x Int)) Int (* x (mod x x)))
(define-fun f ((x Int)) Int (* x (mod x 3)))
(define-fun f ((x Int)) Int (* x (mod x 7)))
(define-fun f ((x Int)) Int (* x (mod x 10)))
(define-fun f ((x Int)) Int (* x (mod 3 x)))
(define-fun f ((x Int)) Int (* x (mod 3 3)))
(define-fun f ((x Int)) Int (* x (mod 3 7)))
(define-fun f ((x Int)) Int (* x (mod 3 10)))
(define-fun f ((x Int)) Int (* x (mod 7 x)))
(define-fun f ((x Int)) Int (* x (mod 7 3)))
(define-fun f ((x Int)) Int (* x (mod 7 7)))
(define-fun f ((x Int)) Int (* x (mod 7 10)))
(define-fun f ((x Int)) Int (* x (mod 10 x)))
(define-fun f ((x Int)) Int (* x (mod 10 3)))
(define-fun f ((x Int)) Int (* x (mod 10 7)))
(define-fun f ((x Int)) Int (* x (mod 10 10)))
(define-fun f ((x Int)) Int (* 3 (* x x)))
(define-fun f ((x Int)) Int (* 3 (* x 3)))
(define-fun f ((x Int)) Int (* 3 (* x 7)))
(define-fun f ((x Int)) Int (* 3 (* x 10)))
(define-fun f ((x Int)) Int (* 3 (* 3 x)))
(define-fun f ((x Int)) Int (* 3 (* 3 3)))
(define-fun f ((x Int)) Int (* 3 (* 3 7)))
(define-fun f ((x Int)) Int (* 3 (* 3 10)))
(define-fun f ((x Int)) Int (* 3 (* 7 x)))
(define-fun f ((x Int)) Int (* 3 (* 7 3)))
(define-fun f ((x Int)) Int (* 3 (* 7 7)))
(define-fun f ((x Int)) Int (* 3 (* 7 10)))
(define-fun f ((x Int)) Int (* 3 (* 10 x)))
(define-fun f ((x Int)) Int (* 3 (* 10 3)))
(define-fun f ((x Int)) Int (* 3 (* 10 7)))
(define-fun f ((x Int)) Int (* 3 (* 10 10)))
(define-fun f ((x Int)) Int (* 3 (mod x x)))
(define-fun f ((x Int)) Int (* 3 (mod x 3)))
(define-fun f ((x Int)) Int (* 3 (mod x 7)))
(define-fun f ((x Int)) Int (* 3 (mod x 10)))
(define-fun f ((x Int)) Int (* 3 (mod 3 x)))
(define-fun f ((x Int)) Int (* 3 (mod 3 3)))
(define-fun f ((x Int)) Int (* 3 (mod 3 7)))
(define-fun f ((x Int)) Int (* 3 (mod 3 10)))
(define-fun f ((x Int)) Int (* 3 (mod 7 x)))
(define-fun f ((x Int)) Int (* 3 (mod 7 3)))
(define-fun f ((x Int)) Int (* 3 (mod 7 7)))
(define-fun f ((x Int)) Int (* 3 (mod 7 10)))
(define-fun f ((x Int)) Int (* 3 (mod 10 x)))
(define-fun f ((x Int)) Int (* 3 (mod 10 3)))
(define-fun f ((x Int)) Int (* 3 (mod 10 7)))
(define-fun f ((x Int)) Int (* 3 (mod 10 10)))
(define-fun f ((x Int)) Int (* 7 (* x x)))
(define-fun f ((x Int)) Int (* 7 (* x 3)))
(define-fun f ((x Int)) Int (* 7 (* x 7)))
(define-fun f ((x Int)) Int (* 7 (* x 10)))
(define-fun f ((x Int)) Int (* 7 (* 3 x)))
(define-fun f ((x Int)) Int (* 7 (* 3 3)))
(define-fun f ((x Int)) Int (* 7 (* 3 7)))
(define-fun f ((x Int)) Int (* 7 (* 3 10)))
(define-fun f ((x Int)) Int (* 7 (* 7 x)))
(define-fun f ((x Int)) Int (* 7 (* 7 3)))
(define-fun f ((x Int)) Int (* 7 (* 7 7)))
(define-fun f ((x Int)) Int (* 7 (* 7 10)))
(define-fun f ((x Int)) Int (* 7 (* 10 x)))
(define-fun f ((x Int)) Int (* 7 (* 10 3)))
(define-fun f ((x Int)) Int (* 7 (* 10 7)))
(define-fun f ((x Int)) Int (* 7 (* 10 10)))
(define-fun f ((x Int)) Int (* 7 (mod x x)))
(define-fun f ((x Int)) Int (* 7 (mod x 3)))
(define-fun f ((x Int)) Int (* 7 (mod x 7)))
(define-fun f ((x Int)) Int (* 7 (mod x 10)))
(define-fun f ((x Int)) Int (* 7 (mod 3 x)))
(define-fun f ((x Int)) Int (* 7 (mod 3 3)))
(define-fun f ((x Int)) Int (* 7 (mod 3 7)))
(define-fun f ((x Int)) Int (* 7 (mod 3 10)))
(define-fun f ((x Int)) Int (* 7 (mod 7 x)))
(define-fun f ((x Int)) Int (* 7 (mod 7 3)))
(define-fun f ((x Int)) Int (* 7 (mod 7 7)))
(define-fun f ((x Int)) Int (* 7 (mod 7 10)))
(define-fun f ((x Int)) Int (* 7 (mod 10 x)))
(define-fun f ((x Int)) Int (* 7 (mod 10 3)))
(define-fun f ((x Int)) Int (* 7 (mod 10 7)))
(define-fun f ((x Int)) Int (* 7 (mod 10 10)))
(define-fun f ((x Int)) Int (* 10 (* x x)))
(define-fun f ((x Int)) Int (* 10 (* x 3)))
(define-fun f ((x Int)) Int (* 10 (* x 7)))
(define-fun f ((x Int)) Int (* 10 (* x 10)))
(define-fun f ((x Int)) Int (* 10 (* 3 x)))
(define-fun f ((x Int)) Int (* 10 (* 3 3)))
(define-fun f ((x Int)) Int (* 10 (* 3 7)))
(define-fun f ((x Int)) Int (* 10 (* 3 10)))
(define-fun f ((x Int)) Int (* 10 (* 7 x)))
(define-fun f ((x Int)) Int (* 10 (* 7 3)))
(define-fun f ((x Int)) Int (* 10 (* 7 7)))
(define-fun f ((x Int)) Int (* 10 (* 7 10)))
(define-fun f ((x Int)) Int (* 10 (* 10 x)))
(define-fun f ((x Int)) Int (* 10 (* 10 3)))
(define-fun f ((x Int)) Int (* 10 (* 10 7)))
(define-fun f ((x Int)) Int (* 10 (* 10 10)))
(define-fun f ((x Int)) Int (* 10 (mod x x)))
(define-fun f ((x Int)) Int (* 10 (mod x 3)))
(define-fun f ((x Int)) Int (* 10 (mod x 7)))
(define-fun f ((x Int)) Int (* 10 (mod x 10)))
(define-fun f ((x Int)) Int (* 10 (mod 3 x)))
(define-fun f ((x Int)) Int (* 10 (mod 3 3)))
(define-fun f ((x Int)) Int (* 10 (mod 3 7)))
(define-fun f ((x Int)) Int (* 10 (mod 3 10)))
(define-fun f ((x Int)) Int (* 10 (mod 7 x)))
(define-fun f ((x Int)) Int (* 10 (mod 7 3)))
(define-fun f ((x Int)) Int (* 10 (mod 7 7)))
(define-fun f ((x Int)) Int (* 10 (mod 7 10)))
(define-fun f ((x Int)) Int (* 10 (mod 10 x)))
(define-fun f ((x Int)) Int (* 10 (mod 10 3)))
(define-fun f ((x Int)) Int (* 10 (mod 10 7)))
(define-fun f ((x Int)) Int (* 10 (mod 10 10)))
(define-fun f ((x Int)) Int (mod x (* x x)))
(define-fun f ((x Int)) Int (mod x (* x 3)))
(define-fun f ((x Int)) Int (mod x (* x 7)))
(define-fun f ((x Int)) Int (mod x (* x 10)))
(define-fun f ((x Int)) Int (mod x (* 3 x)))
(define-fun f ((x Int)) Int (mod x (* 3 3)))
(define-fun f ((x Int)) Int (mod x (* 3 7)))
(define-fun f ((x Int)) Int (mod x (* 3 10)))
(define-fun f ((x Int)) Int (mod x (* 7 x)))
(define-fun f ((x Int)) Int (mod x (* 7 3)))
(define-fun f ((x Int)) Int (mod x (* 7 7)))
(define-fun f ((x Int)) Int (mod x (* 7 10)))
(define-fun f ((x Int)) Int (mod x (* 10 x)))
(define-fun f ((x Int)) Int (mod x (* 10 3)))
(define-fun f ((x Int)) Int (mod x (* 10 7)))
(define-fun f ((x Int)) Int (mod x (* 10 10)))
(define-fun f ((x Int)) Int (mod x (mod x x)))
(define-fun f ((x Int)) Int (mod x (mod x 3)))
(define-fun f ((x Int)) Int (mod x (mod x 7)))
(define-fun f ((x Int)) Int (mod x (mod x 10)))
(define-fun f ((x Int)) Int (mod x (mod 3 x)))
(define-fun f ((x Int)) Int (mod x (mod 3 3)))
(define-fun f ((x Int)) Int (mod x (mod 3 7)))
(define-fun f ((x Int)) Int (mod x (mod 3 10)))
(define-fun f ((x Int)) Int (mod x (mod 7 x)))
(define-fun f ((x Int)) Int (mod x (mod 7 3)))
(define-fun f ((x Int)) Int (mod x (mod 7 7)))
(define-fun f ((x Int)) Int (mod x (mod 7 10)))
(define-fun f ((x Int)) Int (mod x (mod 10 x)))
(define-fun f ((x Int)) Int (mod x (mod 10 3)))
(define-fun f ((x Int)) Int (mod x (mod 10 7)))
(define-fun f ((x Int)) Int (mod x (mod 10 10)))
(define-fun f ((x Int)) Int (mod 3 (* x x)))
(define-fun f ((x Int)) Int (mod 3 (* x 3)))
(define-fun f ((x Int)) Int (mod 3 (* x 7)))
(define-fun f ((x Int)) Int (mod 3 (* x 10)))
(define-fun f ((x Int)) Int (mod 3 (* 3 x)))
(define-fun f ((x Int)) Int (mod 3 (* 3 3)))
(define-fun f ((x Int)) Int (mod 3 (* 3 7)))
(define-fun f ((x Int)) Int (mod 3 (* 3 10)))
(define-fun f ((x Int)) Int (mod 3 (* 7 x)))
(define-fun f ((x Int)) Int (mod 3 (* 7 3)))
(define-fun f ((x Int)) Int (mod 3 (* 7 7)))
(define-fun f ((x Int)) Int (mod 3 (* 7 10)))
(define-fun f ((x Int)) Int (mod 3 (* 10 x)))
(define-fun f ((x Int)) Int (mod 3 (* 10 3)))
(define-fun f ((x Int)) Int (mod 3 (* 10 7)))
(define-fun f ((x Int)) Int (mod 3 (* 10 10)))
(define-fun f ((x Int)) Int (mod 3 (mod x x)))
(define-fun f ((x Int)) Int (mod 3 (mod x 3)))
(define-fun f ((x Int)) Int (mod 3 (mod x 7)))
(define-fun f ((x Int)) Int (mod 3 (mod x 10)))
(define-fun f ((x Int)) Int (mod 3 (mod 3 x)))
(define-fun f ((x Int)) Int (mod 3 (mod 3 3)))
(define-fun f ((x Int)) Int (mod 3 (mod 3 7)))
(define-fun f ((x Int)) Int (mod 3 (mod 3 10)))
(define-fun f ((x Int)) Int (mod 3 (mod 7 x)))
(define-fun f ((x Int)) Int (mod 3 (mod 7 3)))
(define-fun f ((x Int)) Int (mod 3 (mod 7 7)))
(define-fun f ((x Int)) Int (mod 3 (mod 7 10)))
(define-fun f ((x Int)) Int (mod 3 (mod 10 x)))
(define-fun f ((x Int)) Int (mod 3 (mod 10 3)))
(define-fun f ((x Int)) Int (mod 3 (mod 10 7)))
(define-fun f ((x Int)) Int (mod 3 (mod 10 10)))
(define-fun f ((x Int)) Int (mod 7 (* x x)))
(define-fun f ((x Int)) Int (mod 7 (* x 3)))
(define-fun f ((x Int)) Int (mod 7 (* x 7)))
(define-fun f ((x Int)) Int (mod 7 (* x 10)))
(define-fun f ((x Int)) Int (mod 7 (* 3 x)))
(define-fun f ((x Int)) Int (mod 7 (* 3 3)))
(define-fun f ((x Int)) Int (mod 7 (* 3 7)))
(define-fun f ((x Int)) Int (mod 7 (* 3 10)))
(define-fun f ((x Int)) Int (mod 7 (* 7 x)))
(define-fun f ((x Int)) Int (mod 7 (* 7 3)))
(define-fun f ((x Int)) Int (mod 7 (* 7 7)))
(define-fun f ((x Int)) Int (mod 7 (* 7 10)))
(define-fun f ((x Int)) Int (mod 7 (* 10 x)))
(define-fun f ((x Int)) Int (mod 7 (* 10 3)))
(define-fun f ((x Int)) Int (mod 7 (* 10 7)))
(define-fun f ((x Int)) Int (mod 7 (* 10 10)))
(define-fun f ((x Int)) Int (mod 7 (mod x x)))
(define-fun f ((x Int)) Int (mod 7 (mod x 3)))
(define-fun f ((x Int)) Int (mod 7 (mod x 7)))
(define-fun f ((x Int)) Int (mod 7 (mod x 10)))
(define-fun f ((x Int)) Int (mod 7 (mod 3 x)))
(define-fun f ((x Int)) Int (mod 7 (mod 3 3)))
(define-fun f ((x Int)) Int (mod 7 (mod 3 7)))
(define-fun f ((x Int)) Int (mod 7 (mod 3 10)))
(define-fun f ((x Int)) Int (mod 7 (mod 7 x)))
(define-fun f ((x Int)) Int (mod 7 (mod 7 3)))
(define-fun f ((x Int)) Int (mod 7 (mod 7 7)))
(define-fun f ((x Int)) Int (mod 7 (mod 7 10)))
(define-fun f ((x Int)) Int (mod 7 (mod 10 x)))
(define-fun f ((x Int)) Int (mod 7 (mod 10 3)))
(define-fun f ((x Int)) Int (mod 7 (mod 10 7)))
(define-fun f ((x Int)) Int (mod 7 (mod 10 10)))
(define-fun f ((x Int)) Int (mod 10 (* x x)))
(define-fun f ((x Int)) Int (mod 10 (* x 3)))
(define-fun f ((x Int)) Int (mod 10 (* x 7)))
(define-fun f ((x Int)) Int (mod 10 (* x 10)))
(define-fun f ((x Int)) Int (mod 10 (* 3 x)))
(define-fun f ((x Int)) Int (mod 10 (* 3 3)))
(define-fun f ((x Int)) Int (mod 10 (* 3 7)))
(define-fun f ((x Int)) Int (mod 10 (* 3 10)))
(define-fun f ((x Int)) Int (mod 10 (* 7 x)))
(define-fun f ((x Int)) Int (mod 10 (* 7 3)))
(define-fun f ((x Int)) Int (mod 10 (* 7 7)))
(define-fun f ((x Int)) Int (mod 10 (* 7 10)))
(define-fun f ((x Int)) Int (mod 10 (* 10 x)))
(define-fun f ((x Int)) Int (mod 10 (* 10 3)))
(define-fun f ((x Int)) Int (mod 10 (* 10 7)))
(define-fun f ((x Int)) Int (mod 10 (* 10 10)))
(define-fun f ((x Int)) Int (mod 10 (mod x x)))
(define-fun f ((x Int)) Int (mod 10 (mod x 3)))
(define-fun f ((x Int)) Int (mod 10 (mod x 7)))
(define-fun f ((x Int)) Int (mod 10 (mod x 10)))
(define-fun f ((x Int)) Int (mod 10 (mod 3 x)))
(define-fun f ((x Int)) Int (mod 10 (mod 3 3)))
(define-fun f ((x Int)) Int (mod 10 (mod 3 7)))
(define-fun f ((x Int)) Int (mod 10 (mod 3 10)))
(define-fun f ((x Int)) Int (mod 10 (mod 7 x)))
(define-fun f ((x Int)) Int (mod 10 (mod 7 3)))
(define-fun f ((x Int)) Int (mod 10 (mod 7 7)))
(define-fun f ((x Int)) Int (mod 10 (mod 7 10)))
(define-fun f ((x Int)) Int (mod 10 (mod 10 x)))
(define-fun f ((x Int)) Int (mod 10 (mod 10 3)))
(define-fun f ((x Int)) Int (mod 10 (mod 10 7)))
(define-fun f ((x Int)) Int (mod 10 (mod 10 10)))
(define-fun f ((x Int)) Int (mod (* x x) x))
(define-fun f ((x Int)) Int (mod (* x x) 3))
(define-fun f ((x Int)) Int (mod (* x x) 7))
(define-fun f ((x Int)) Int (mod (* x x) 10))
(define-fun f ((x Int)) Int (mod (* x 3) x))
(define-fun f ((x Int)) Int (mod (* x 3) 3))
(define-fun f ((x Int)) Int (mod (* x 3) 7))
(define-fun f ((x Int)) Int (mod (* x 3) 10))
(define-fun f ((x Int)) Int (mod (* x 3) 10))
